<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sample.dal.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="sample.dal.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="login_times" property="loginTimes" jdbcType="INTEGER" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="TIMESTAMP" />
    <result column="person_card" property="personCard" jdbcType="VARCHAR" />
    <result column="head_image" property="headImage" jdbcType="VARCHAR" />
    <result column="level_score" property="levelScore" jdbcType="INTEGER" />
    <result column="buy_score" property="buyScore" jdbcType="INTEGER" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="is_use" property="isUse" jdbcType="BIT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, email, password, real_name, nick_name, login_times, last_login_time, last_login_ip, 
    birth, person_card, head_image, level_score, buy_score, reg_time, is_use, sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sample.dal.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sample_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sample_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sample_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sample.dal.entity.UserExample" >
    delete from sample_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sample.dal.entity.User" >
    insert into sample_user (id, email, password, 
      real_name, nick_name, login_times, 
      last_login_time, last_login_ip, birth, 
      person_card, head_image, level_score, 
      buy_score, reg_time, is_use, 
      sort)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{loginTimes,jdbcType=INTEGER}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, #{birth,jdbcType=TIMESTAMP}, 
      #{personCard,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, #{levelScore,jdbcType=INTEGER}, 
      #{buyScore,jdbcType=INTEGER}, #{regTime,jdbcType=TIMESTAMP}, #{isUse,jdbcType=BIT}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="sample.dal.entity.User" >
    insert into sample_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="loginTimes != null" >
        login_times,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="personCard != null" >
        person_card,
      </if>
      <if test="headImage != null" >
        head_image,
      </if>
      <if test="levelScore != null" >
        level_score,
      </if>
      <if test="buyScore != null" >
        buy_score,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="isUse != null" >
        is_use,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginTimes != null" >
        #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="personCard != null" >
        #{personCard,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="levelScore != null" >
        #{levelScore,jdbcType=INTEGER},
      </if>
      <if test="buyScore != null" >
        #{buyScore,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUse != null" >
        #{isUse,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sample.dal.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from sample_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sample_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTimes != null" >
        login_times = #{record.loginTimes,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTime != null" >
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null" >
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personCard != null" >
        person_card = #{record.personCard,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null" >
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.levelScore != null" >
        level_score = #{record.levelScore,jdbcType=INTEGER},
      </if>
      <if test="record.buyScore != null" >
        buy_score = #{record.buyScore,jdbcType=INTEGER},
      </if>
      <if test="record.regTime != null" >
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isUse != null" >
        is_use = #{record.isUse,jdbcType=BIT},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sample_user
    set id = #{record.id,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      login_times = #{record.loginTimes,jdbcType=INTEGER},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=TIMESTAMP},
      person_card = #{record.personCard,jdbcType=VARCHAR},
      head_image = #{record.headImage,jdbcType=VARCHAR},
      level_score = #{record.levelScore,jdbcType=INTEGER},
      buy_score = #{record.buyScore,jdbcType=INTEGER},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      is_use = #{record.isUse,jdbcType=BIT},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sample.dal.entity.User" >
    update sample_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginTimes != null" >
        login_times = #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="personCard != null" >
        person_card = #{personCard,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null" >
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="levelScore != null" >
        level_score = #{levelScore,jdbcType=INTEGER},
      </if>
      <if test="buyScore != null" >
        buy_score = #{buyScore,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUse != null" >
        is_use = #{isUse,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sample.dal.entity.User" >
    update sample_user
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      login_times = #{loginTimes,jdbcType=INTEGER},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=TIMESTAMP},
      person_card = #{personCard,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      level_score = #{levelScore,jdbcType=INTEGER},
      buy_score = #{buyScore,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      is_use = #{isUse,jdbcType=BIT},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>